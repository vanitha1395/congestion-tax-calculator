{
	"info": {
		"_postman_id": "20e8853e-fe0f-43b9-b270-069674b5073d",
		"name": "Tax Calculator test case collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33926407"
	},
	"item": [
		{
			"name": "localhost:8080/CalculateCongestionTax_TC1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.congestionTaxAmount).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"CongestionTaxAmount is a number\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.congestionTaxAmount).to.be.a('number');",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"city\": \"Gothenburg\",\n  \"vehicleId\": \"car\",\n  \"travelDates\": [\n    \"2023-06-11T09:00:00\",\n    \"2023-06-14T07:30:00\"\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/CalculateCongestionTax",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"CalculateCongestionTax"
					]
				},
				"description": "\n# Calculate Congestion Tax\n\nThis endpoint is used to calculate the congestion tax for a vehicle in a specific city based on the travel dates.\n\n## Request\n\n### Request Body\n\n- `city` (string, required): The name of the city for which the congestion tax is being calculated.\n- `vehicleId` (string, required): The unique identifier of the vehicle.\n- `travelDates` (array of strings, required): An array of travel dates for which the congestion tax is being calculated.\n\nExample:\n```json\n{\n    \"city\": \"\",\n    \"vehicleId\": \"\",\n    \"travelDates\": [\"\"]\n}\n```\n\n## Response\n\nThe response for this request is a JSON object with the following schema:\n\n```json\n{\n    \"congestionTaxAmount\": \"number\"\n}\n```\n\n- `congestionTaxAmount` (number): The calculated congestion tax amount for the given vehicle and travel dates.\n"
			},
			"response": []
		},
		{
			"name": "localhost:8080/CalculateCongestionTax_TC2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Tax value expected\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"36\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"city\": \"Gothenburg\",\n  \"vehicleId\": \"car\",\n  \"travelDates\": [\n    \"2023-06-11T09:00:00\",\n    \"2023-06-12T07:30:00\", \n    \"2023-06-13T07:31:00\"\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/CalculateCongestionTax",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"CalculateCongestionTax"
					]
				},
				"description": "\n# Calculate Congestion Tax\n\nThis endpoint is used to calculate the congestion tax for a vehicle in a specific city based on the travel dates.\n\n## Request\n\n### Request Body\n\n- `city` (string, required): The name of the city for which the congestion tax is being calculated.\n- `vehicleId` (string, required): The unique identifier of the vehicle.\n- `travelDates` (array of strings, required): An array of travel dates for which the congestion tax is being calculated.\n\nExample:\n```json\n{\n    \"city\": \"\",\n    \"vehicleId\": \"\",\n    \"travelDates\": [\"\"]\n}\n```\n\n## Response\n\nThe response for this request is a JSON object with the following schema:\n\n```json\n{\n    \"congestionTaxAmount\": \"number\"\n}\n```\n\n- `congestionTaxAmount` (number): The calculated congestion tax amount for the given vehicle and travel dates.\n"
			},
			"response": [
				{
					"name": "localhost:8080/CalculateCongestionTax_TC1",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"city\": \"Gothenburg\",\n    \"vehicleId\": \"car\",\n    \"travelDates\": [\n        \"2023-06-11T09:00:00\",\n        \"2023-06-14T06:30:00\",\n        \"2023-06-14T07:31:00\",\n        \"2023-06-14T07:32:00\",\n        \"2023-06-14T07:33:00\",\n        \"2023-06-14T07:34:00\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/CalculateCongestionTax",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"CalculateCongestionTax"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "BaseHTTP/0.6 Python/3.9.19"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Jun 2024 19:50:31 GMT"
						},
						{
							"key": "Content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": null
				},
				{
					"name": "localhost:8080/CalculateCongestionTax_TC2",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"city\": \"Gothenburg\",\n    \"vehicleId\": \"car\",\n    \"travelDates\": [\n        \"2023-06-11T09:00:00\",\n        \"2023-06-14T06:30:00\",\n        \"2023-06-14T07:31:00\",\n        \"2023-06-14T07:32:00\",\n        \"2023-06-14T07:33:00\",\n        \"2023-06-14T07:34:00\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/CalculateCongestionTax",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"CalculateCongestionTax"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "BaseHTTP/0.6 Python/3.9.19"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Jun 2024 19:52:03 GMT"
						},
						{
							"key": "Content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"Congestion Tax calculated:\": 60\n}"
				},
				{
					"name": "localhost:8080/CalculateCongestionTax_TC3",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"city\": \"Gothenburg\",\n    \"vehicleId\": \"car\",\n    \"travelDates\": [\n        \"2023-06-12T06:00:00\",\n        \"2023-06-13T06:00:00\",\n        \"2023-06-14T06:00:00\",\n        \"2023-06-15T06:00:00\",\n        \"2023-06-16T06:00:00\",\n        \"2023-06-20T06:00:00\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/CalculateCongestionTax",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"CalculateCongestionTax"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "BaseHTTP/0.6 Python/3.9.19"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Jun 2024 19:54:54 GMT"
						},
						{
							"key": "Content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"Congestion Tax calculated:\": 48\n}"
				},
				{
					"name": "localhost:8080/CalculateCongestionTax_TC4",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"city\": \"Gothenburg\",\n    \"vehicleId\": \"car\",\n    \"travelDates\": [\n        \"2023-06-12T09:00:00\",\n        \"2023-06-13T09:00:00\",\n        \"2023-06-14T09:00:00\",\n        \"2023-06-15T09:00:00\",\n        \"2023-06-16T09:00:00\",\n        \"2023-06-20T09:00:00\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/CalculateCongestionTax",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"CalculateCongestionTax"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "BaseHTTP/0.6 Python/3.9.19"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Jun 2024 19:55:17 GMT"
						},
						{
							"key": "Content-type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"Congestion Tax calculated:\": 48\n}"
				}
			]
		},
		{
			"name": "localhost:8080/CalculateCongestionTax_TC3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"city\": \"Gothenburg\",\n    \"vehicleId\": \"car\",\n    \"travelDates\": [\n        \"2023-06-12T07:23:00\",\n        \"2023-06-13T07:25:00\",\n        \"2023-06-14T07:25:00\",\n        \"2023-06-15T07:25:00\",\n        \"2023-06-16T07:25:00\",\n        \"2023-06-20T07:15:00\",\n        \"2023-06-23T07:15:00\",\n        \"2023-06-26T07:15:00\"\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/CalculateCongestionTax",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"CalculateCongestionTax"
					]
				}
			},
			"response": []
		}
	]
}